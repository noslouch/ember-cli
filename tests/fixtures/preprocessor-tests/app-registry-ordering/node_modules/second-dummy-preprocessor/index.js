'use strict';

var Filter     = require('broccoli-filter');

function DummyFilter(inputTree, options) {
  if (!(this instanceof DummyFilter)) {
    return new DummyFilter(inputTree, options);
  }

  this.inputTree = inputTree;
  this.options = options || {};
}

DummyFilter.prototype = Object.create(Filter.prototype);
DummyFilter.prototype.constructor = DummyFilter;

DummyFilter.prototype.extensions = ['js'];
DummyFilter.prototype.targetExtension = 'js';

DummyFilter.prototype.processString = function (string, relativePath) {
  return string.replace(/__SECOND_PREPROCESSOR_REPLACEMENT_TOKEN__/, 'replacedByPreprocessor');
};

module.exports = {
  name: 'second-dummy-preprocessor',
  setupPreprocessorRegistry: function(type, registry) {
    if (type !== 'parent') { return; }
    var plugin = {
      name: 'second-dummy-preprocessor',
      ext: 'js',
      toTree: function(tree) {
        return DummyFilter(tree, {});
      }
    };

    registry.add('js', plugin);
  }
};
